
P10_ADCTrigger.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000394  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000418  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000454  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000612  00000000  00000000  00000484  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000585  00000000  00000000  00000a96  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000022a  00000000  00000000  0000101b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00001248  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000031f  00000000  00000000  000012e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fa  00000000  00000000  000015ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000016f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_14>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 75 00 	jmp	0xea	; 0xea <__vector_19>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 36       	cpi	r26, 0x60	; 96
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  74:	0c 94 c8 01 	jmp	0x390	; 0x390 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_14>:
#include <avr/interrupt.h>
#include <util/delay.h>

volatile int x = 0, y = 0; 

ISR (ADC_vect) {
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	3f 93       	push	r19
  8a:	4f 93       	push	r20
  8c:	5f 93       	push	r21
  8e:	6f 93       	push	r22
  90:	7f 93       	push	r23
  92:	8f 93       	push	r24
  94:	9f 93       	push	r25
  96:	af 93       	push	r26
  98:	bf 93       	push	r27
  9a:	ef 93       	push	r30
  9c:	ff 93       	push	r31
	OCR2 = (int)((double)ADC * 255.0 / 1024.0);
  9e:	64 b1       	in	r22, 0x04	; 4
  a0:	75 b1       	in	r23, 0x05	; 5
  a2:	80 e0       	ldi	r24, 0x00	; 0
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	0e 94 cd 00 	call	0x19a	; 0x19a <__floatunsisf>
  aa:	20 e0       	ldi	r18, 0x00	; 0
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	4f e7       	ldi	r20, 0x7F	; 127
  b0:	53 e4       	ldi	r21, 0x43	; 67
  b2:	0e 94 33 01 	call	0x266	; 0x266 <__mulsf3>
  b6:	20 e0       	ldi	r18, 0x00	; 0
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	40 e8       	ldi	r20, 0x80	; 128
  bc:	5a e3       	ldi	r21, 0x3A	; 58
  be:	0e 94 33 01 	call	0x266	; 0x266 <__mulsf3>
  c2:	0e 94 97 00 	call	0x12e	; 0x12e <__fixsfsi>
  c6:	63 bd       	out	0x23, r22	; 35
}
  c8:	ff 91       	pop	r31
  ca:	ef 91       	pop	r30
  cc:	bf 91       	pop	r27
  ce:	af 91       	pop	r26
  d0:	9f 91       	pop	r25
  d2:	8f 91       	pop	r24
  d4:	7f 91       	pop	r23
  d6:	6f 91       	pop	r22
  d8:	5f 91       	pop	r21
  da:	4f 91       	pop	r20
  dc:	3f 91       	pop	r19
  de:	2f 91       	pop	r18
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	0f 90       	pop	r0
  e6:	1f 90       	pop	r1
  e8:	18 95       	reti

000000ea <__vector_19>:

ISR (TIMER0_COMP_vect) {}
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <main>:
	
int main(void)
{	
	// Habilitar interrupcion
	sei();
  fe:	78 94       	sei
		
    // Configurar ADC
	ADMUX = 0b01000010;
 100:	82 e4       	ldi	r24, 0x42	; 66
 102:	87 b9       	out	0x07, r24	; 7
	SFIOR = 0b01100000; // Tim0 comp
 104:	80 e6       	ldi	r24, 0x60	; 96
 106:	80 bf       	out	0x30, r24	; 48
	ADCSRA = 0b10111011; // Trigger, INT, 8
 108:	8b eb       	ldi	r24, 0xBB	; 187
 10a:	86 b9       	out	0x06, r24	; 6
	
	// Configurar timer 0
	OCR0 = 97; 
 10c:	81 e6       	ldi	r24, 0x61	; 97
 10e:	8c bf       	out	0x3c, r24	; 60
	TCCR0 = 0b00001101; // prescaler 1024
 110:	8d e0       	ldi	r24, 0x0D	; 13
 112:	83 bf       	out	0x33, r24	; 51
	TIMSK = 0b00000010;
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	89 bf       	out	0x39, r24	; 57
	
	// Configurar PWM en OCR2 prescaler 64
	TCCR2 |= (1<<WGM20)|(1<<WGM21);                   
 118:	85 b5       	in	r24, 0x25	; 37
 11a:	88 64       	ori	r24, 0x48	; 72
 11c:	85 bd       	out	0x25, r24	; 37
	TCCR2 |= (1<<COM21)|(1<<CS20)|(1<<CS21)|(0<<CS22);
 11e:	85 b5       	in	r24, 0x25	; 37
 120:	83 62       	ori	r24, 0x23	; 35
 122:	85 bd       	out	0x25, r24	; 37
	
	OCR2 = 0;
 124:	13 bc       	out	0x23, r1	; 35
	
	// Puertos
	DDRD = 255; 
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	81 bb       	out	0x11, r24	; 17
	DDRC = 255; 
 12a:	84 bb       	out	0x14, r24	; 20
 12c:	ff cf       	rjmp	.-2      	; 0x12c <main+0x2e>

0000012e <__fixsfsi>:
 12e:	0e 94 9e 00 	call	0x13c	; 0x13c <__fixunssfsi>
 132:	68 94       	set
 134:	b1 11       	cpse	r27, r1
 136:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__fp_szero>
 13a:	08 95       	ret

0000013c <__fixunssfsi>:
 13c:	0e 94 12 01 	call	0x224	; 0x224 <__fp_splitA>
 140:	88 f0       	brcs	.+34     	; 0x164 <__fixunssfsi+0x28>
 142:	9f 57       	subi	r25, 0x7F	; 127
 144:	98 f0       	brcs	.+38     	; 0x16c <__fixunssfsi+0x30>
 146:	b9 2f       	mov	r27, r25
 148:	99 27       	eor	r25, r25
 14a:	b7 51       	subi	r27, 0x17	; 23
 14c:	b0 f0       	brcs	.+44     	; 0x17a <__fixunssfsi+0x3e>
 14e:	e1 f0       	breq	.+56     	; 0x188 <__fixunssfsi+0x4c>
 150:	66 0f       	add	r22, r22
 152:	77 1f       	adc	r23, r23
 154:	88 1f       	adc	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	1a f0       	brmi	.+6      	; 0x160 <__fixunssfsi+0x24>
 15a:	ba 95       	dec	r27
 15c:	c9 f7       	brne	.-14     	; 0x150 <__fixunssfsi+0x14>
 15e:	14 c0       	rjmp	.+40     	; 0x188 <__fixunssfsi+0x4c>
 160:	b1 30       	cpi	r27, 0x01	; 1
 162:	91 f0       	breq	.+36     	; 0x188 <__fixunssfsi+0x4c>
 164:	0e 94 2c 01 	call	0x258	; 0x258 <__fp_zero>
 168:	b1 e0       	ldi	r27, 0x01	; 1
 16a:	08 95       	ret
 16c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__fp_zero>
 170:	67 2f       	mov	r22, r23
 172:	78 2f       	mov	r23, r24
 174:	88 27       	eor	r24, r24
 176:	b8 5f       	subi	r27, 0xF8	; 248
 178:	39 f0       	breq	.+14     	; 0x188 <__fixunssfsi+0x4c>
 17a:	b9 3f       	cpi	r27, 0xF9	; 249
 17c:	cc f3       	brlt	.-14     	; 0x170 <__fixunssfsi+0x34>
 17e:	86 95       	lsr	r24
 180:	77 95       	ror	r23
 182:	67 95       	ror	r22
 184:	b3 95       	inc	r27
 186:	d9 f7       	brne	.-10     	; 0x17e <__fixunssfsi+0x42>
 188:	3e f4       	brtc	.+14     	; 0x198 <__fixunssfsi+0x5c>
 18a:	90 95       	com	r25
 18c:	80 95       	com	r24
 18e:	70 95       	com	r23
 190:	61 95       	neg	r22
 192:	7f 4f       	sbci	r23, 0xFF	; 255
 194:	8f 4f       	sbci	r24, 0xFF	; 255
 196:	9f 4f       	sbci	r25, 0xFF	; 255
 198:	08 95       	ret

0000019a <__floatunsisf>:
 19a:	e8 94       	clt
 19c:	09 c0       	rjmp	.+18     	; 0x1b0 <__floatsisf+0x12>

0000019e <__floatsisf>:
 19e:	97 fb       	bst	r25, 7
 1a0:	3e f4       	brtc	.+14     	; 0x1b0 <__floatsisf+0x12>
 1a2:	90 95       	com	r25
 1a4:	80 95       	com	r24
 1a6:	70 95       	com	r23
 1a8:	61 95       	neg	r22
 1aa:	7f 4f       	sbci	r23, 0xFF	; 255
 1ac:	8f 4f       	sbci	r24, 0xFF	; 255
 1ae:	9f 4f       	sbci	r25, 0xFF	; 255
 1b0:	99 23       	and	r25, r25
 1b2:	a9 f0       	breq	.+42     	; 0x1de <__floatsisf+0x40>
 1b4:	f9 2f       	mov	r31, r25
 1b6:	96 e9       	ldi	r25, 0x96	; 150
 1b8:	bb 27       	eor	r27, r27
 1ba:	93 95       	inc	r25
 1bc:	f6 95       	lsr	r31
 1be:	87 95       	ror	r24
 1c0:	77 95       	ror	r23
 1c2:	67 95       	ror	r22
 1c4:	b7 95       	ror	r27
 1c6:	f1 11       	cpse	r31, r1
 1c8:	f8 cf       	rjmp	.-16     	; 0x1ba <__floatsisf+0x1c>
 1ca:	fa f4       	brpl	.+62     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1cc:	bb 0f       	add	r27, r27
 1ce:	11 f4       	brne	.+4      	; 0x1d4 <__floatsisf+0x36>
 1d0:	60 ff       	sbrs	r22, 0
 1d2:	1b c0       	rjmp	.+54     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1d4:	6f 5f       	subi	r22, 0xFF	; 255
 1d6:	7f 4f       	sbci	r23, 0xFF	; 255
 1d8:	8f 4f       	sbci	r24, 0xFF	; 255
 1da:	9f 4f       	sbci	r25, 0xFF	; 255
 1dc:	16 c0       	rjmp	.+44     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 1de:	88 23       	and	r24, r24
 1e0:	11 f0       	breq	.+4      	; 0x1e6 <__floatsisf+0x48>
 1e2:	96 e9       	ldi	r25, 0x96	; 150
 1e4:	11 c0       	rjmp	.+34     	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 1e6:	77 23       	and	r23, r23
 1e8:	21 f0       	breq	.+8      	; 0x1f2 <__floatsisf+0x54>
 1ea:	9e e8       	ldi	r25, 0x8E	; 142
 1ec:	87 2f       	mov	r24, r23
 1ee:	76 2f       	mov	r23, r22
 1f0:	05 c0       	rjmp	.+10     	; 0x1fc <__floatsisf+0x5e>
 1f2:	66 23       	and	r22, r22
 1f4:	71 f0       	breq	.+28     	; 0x212 <__EEPROM_REGION_LENGTH__+0x12>
 1f6:	96 e8       	ldi	r25, 0x86	; 134
 1f8:	86 2f       	mov	r24, r22
 1fa:	70 e0       	ldi	r23, 0x00	; 0
 1fc:	60 e0       	ldi	r22, 0x00	; 0
 1fe:	2a f0       	brmi	.+10     	; 0x20a <__EEPROM_REGION_LENGTH__+0xa>
 200:	9a 95       	dec	r25
 202:	66 0f       	add	r22, r22
 204:	77 1f       	adc	r23, r23
 206:	88 1f       	adc	r24, r24
 208:	da f7       	brpl	.-10     	; 0x200 <__EEPROM_REGION_LENGTH__>
 20a:	88 0f       	add	r24, r24
 20c:	96 95       	lsr	r25
 20e:	87 95       	ror	r24
 210:	97 f9       	bld	r25, 7
 212:	08 95       	ret

00000214 <__fp_split3>:
 214:	57 fd       	sbrc	r21, 7
 216:	90 58       	subi	r25, 0x80	; 128
 218:	44 0f       	add	r20, r20
 21a:	55 1f       	adc	r21, r21
 21c:	59 f0       	breq	.+22     	; 0x234 <__fp_splitA+0x10>
 21e:	5f 3f       	cpi	r21, 0xFF	; 255
 220:	71 f0       	breq	.+28     	; 0x23e <__fp_splitA+0x1a>
 222:	47 95       	ror	r20

00000224 <__fp_splitA>:
 224:	88 0f       	add	r24, r24
 226:	97 fb       	bst	r25, 7
 228:	99 1f       	adc	r25, r25
 22a:	61 f0       	breq	.+24     	; 0x244 <__fp_splitA+0x20>
 22c:	9f 3f       	cpi	r25, 0xFF	; 255
 22e:	79 f0       	breq	.+30     	; 0x24e <__fp_splitA+0x2a>
 230:	87 95       	ror	r24
 232:	08 95       	ret
 234:	12 16       	cp	r1, r18
 236:	13 06       	cpc	r1, r19
 238:	14 06       	cpc	r1, r20
 23a:	55 1f       	adc	r21, r21
 23c:	f2 cf       	rjmp	.-28     	; 0x222 <__fp_split3+0xe>
 23e:	46 95       	lsr	r20
 240:	f1 df       	rcall	.-30     	; 0x224 <__fp_splitA>
 242:	08 c0       	rjmp	.+16     	; 0x254 <__fp_splitA+0x30>
 244:	16 16       	cp	r1, r22
 246:	17 06       	cpc	r1, r23
 248:	18 06       	cpc	r1, r24
 24a:	99 1f       	adc	r25, r25
 24c:	f1 cf       	rjmp	.-30     	; 0x230 <__fp_splitA+0xc>
 24e:	86 95       	lsr	r24
 250:	71 05       	cpc	r23, r1
 252:	61 05       	cpc	r22, r1
 254:	08 94       	sec
 256:	08 95       	ret

00000258 <__fp_zero>:
 258:	e8 94       	clt

0000025a <__fp_szero>:
 25a:	bb 27       	eor	r27, r27
 25c:	66 27       	eor	r22, r22
 25e:	77 27       	eor	r23, r23
 260:	cb 01       	movw	r24, r22
 262:	97 f9       	bld	r25, 7
 264:	08 95       	ret

00000266 <__mulsf3>:
 266:	0e 94 46 01 	call	0x28c	; 0x28c <__mulsf3x>
 26a:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_round>
 26e:	0e 94 a9 01 	call	0x352	; 0x352 <__fp_pscA>
 272:	38 f0       	brcs	.+14     	; 0x282 <__mulsf3+0x1c>
 274:	0e 94 b0 01 	call	0x360	; 0x360 <__fp_pscB>
 278:	20 f0       	brcs	.+8      	; 0x282 <__mulsf3+0x1c>
 27a:	95 23       	and	r25, r21
 27c:	11 f0       	breq	.+4      	; 0x282 <__mulsf3+0x1c>
 27e:	0c 94 a0 01 	jmp	0x340	; 0x340 <__fp_inf>
 282:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__fp_nan>
 286:	11 24       	eor	r1, r1
 288:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__fp_szero>

0000028c <__mulsf3x>:
 28c:	0e 94 0a 01 	call	0x214	; 0x214 <__fp_split3>
 290:	70 f3       	brcs	.-36     	; 0x26e <__mulsf3+0x8>

00000292 <__mulsf3_pse>:
 292:	95 9f       	mul	r25, r21
 294:	c1 f3       	breq	.-16     	; 0x286 <__mulsf3+0x20>
 296:	95 0f       	add	r25, r21
 298:	50 e0       	ldi	r21, 0x00	; 0
 29a:	55 1f       	adc	r21, r21
 29c:	62 9f       	mul	r22, r18
 29e:	f0 01       	movw	r30, r0
 2a0:	72 9f       	mul	r23, r18
 2a2:	bb 27       	eor	r27, r27
 2a4:	f0 0d       	add	r31, r0
 2a6:	b1 1d       	adc	r27, r1
 2a8:	63 9f       	mul	r22, r19
 2aa:	aa 27       	eor	r26, r26
 2ac:	f0 0d       	add	r31, r0
 2ae:	b1 1d       	adc	r27, r1
 2b0:	aa 1f       	adc	r26, r26
 2b2:	64 9f       	mul	r22, r20
 2b4:	66 27       	eor	r22, r22
 2b6:	b0 0d       	add	r27, r0
 2b8:	a1 1d       	adc	r26, r1
 2ba:	66 1f       	adc	r22, r22
 2bc:	82 9f       	mul	r24, r18
 2be:	22 27       	eor	r18, r18
 2c0:	b0 0d       	add	r27, r0
 2c2:	a1 1d       	adc	r26, r1
 2c4:	62 1f       	adc	r22, r18
 2c6:	73 9f       	mul	r23, r19
 2c8:	b0 0d       	add	r27, r0
 2ca:	a1 1d       	adc	r26, r1
 2cc:	62 1f       	adc	r22, r18
 2ce:	83 9f       	mul	r24, r19
 2d0:	a0 0d       	add	r26, r0
 2d2:	61 1d       	adc	r22, r1
 2d4:	22 1f       	adc	r18, r18
 2d6:	74 9f       	mul	r23, r20
 2d8:	33 27       	eor	r19, r19
 2da:	a0 0d       	add	r26, r0
 2dc:	61 1d       	adc	r22, r1
 2de:	23 1f       	adc	r18, r19
 2e0:	84 9f       	mul	r24, r20
 2e2:	60 0d       	add	r22, r0
 2e4:	21 1d       	adc	r18, r1
 2e6:	82 2f       	mov	r24, r18
 2e8:	76 2f       	mov	r23, r22
 2ea:	6a 2f       	mov	r22, r26
 2ec:	11 24       	eor	r1, r1
 2ee:	9f 57       	subi	r25, 0x7F	; 127
 2f0:	50 40       	sbci	r21, 0x00	; 0
 2f2:	9a f0       	brmi	.+38     	; 0x31a <__mulsf3_pse+0x88>
 2f4:	f1 f0       	breq	.+60     	; 0x332 <__mulsf3_pse+0xa0>
 2f6:	88 23       	and	r24, r24
 2f8:	4a f0       	brmi	.+18     	; 0x30c <__mulsf3_pse+0x7a>
 2fa:	ee 0f       	add	r30, r30
 2fc:	ff 1f       	adc	r31, r31
 2fe:	bb 1f       	adc	r27, r27
 300:	66 1f       	adc	r22, r22
 302:	77 1f       	adc	r23, r23
 304:	88 1f       	adc	r24, r24
 306:	91 50       	subi	r25, 0x01	; 1
 308:	50 40       	sbci	r21, 0x00	; 0
 30a:	a9 f7       	brne	.-22     	; 0x2f6 <__mulsf3_pse+0x64>
 30c:	9e 3f       	cpi	r25, 0xFE	; 254
 30e:	51 05       	cpc	r21, r1
 310:	80 f0       	brcs	.+32     	; 0x332 <__mulsf3_pse+0xa0>
 312:	0c 94 a0 01 	jmp	0x340	; 0x340 <__fp_inf>
 316:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__fp_szero>
 31a:	5f 3f       	cpi	r21, 0xFF	; 255
 31c:	e4 f3       	brlt	.-8      	; 0x316 <__mulsf3_pse+0x84>
 31e:	98 3e       	cpi	r25, 0xE8	; 232
 320:	d4 f3       	brlt	.-12     	; 0x316 <__mulsf3_pse+0x84>
 322:	86 95       	lsr	r24
 324:	77 95       	ror	r23
 326:	67 95       	ror	r22
 328:	b7 95       	ror	r27
 32a:	f7 95       	ror	r31
 32c:	e7 95       	ror	r30
 32e:	9f 5f       	subi	r25, 0xFF	; 255
 330:	c1 f7       	brne	.-16     	; 0x322 <__mulsf3_pse+0x90>
 332:	fe 2b       	or	r31, r30
 334:	88 0f       	add	r24, r24
 336:	91 1d       	adc	r25, r1
 338:	96 95       	lsr	r25
 33a:	87 95       	ror	r24
 33c:	97 f9       	bld	r25, 7
 33e:	08 95       	ret

00000340 <__fp_inf>:
 340:	97 f9       	bld	r25, 7
 342:	9f 67       	ori	r25, 0x7F	; 127
 344:	80 e8       	ldi	r24, 0x80	; 128
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	08 95       	ret

0000034c <__fp_nan>:
 34c:	9f ef       	ldi	r25, 0xFF	; 255
 34e:	80 ec       	ldi	r24, 0xC0	; 192
 350:	08 95       	ret

00000352 <__fp_pscA>:
 352:	00 24       	eor	r0, r0
 354:	0a 94       	dec	r0
 356:	16 16       	cp	r1, r22
 358:	17 06       	cpc	r1, r23
 35a:	18 06       	cpc	r1, r24
 35c:	09 06       	cpc	r0, r25
 35e:	08 95       	ret

00000360 <__fp_pscB>:
 360:	00 24       	eor	r0, r0
 362:	0a 94       	dec	r0
 364:	12 16       	cp	r1, r18
 366:	13 06       	cpc	r1, r19
 368:	14 06       	cpc	r1, r20
 36a:	05 06       	cpc	r0, r21
 36c:	08 95       	ret

0000036e <__fp_round>:
 36e:	09 2e       	mov	r0, r25
 370:	03 94       	inc	r0
 372:	00 0c       	add	r0, r0
 374:	11 f4       	brne	.+4      	; 0x37a <__fp_round+0xc>
 376:	88 23       	and	r24, r24
 378:	52 f0       	brmi	.+20     	; 0x38e <__fp_round+0x20>
 37a:	bb 0f       	add	r27, r27
 37c:	40 f4       	brcc	.+16     	; 0x38e <__fp_round+0x20>
 37e:	bf 2b       	or	r27, r31
 380:	11 f4       	brne	.+4      	; 0x386 <__fp_round+0x18>
 382:	60 ff       	sbrs	r22, 0
 384:	04 c0       	rjmp	.+8      	; 0x38e <__fp_round+0x20>
 386:	6f 5f       	subi	r22, 0xFF	; 255
 388:	7f 4f       	sbci	r23, 0xFF	; 255
 38a:	8f 4f       	sbci	r24, 0xFF	; 255
 38c:	9f 4f       	sbci	r25, 0xFF	; 255
 38e:	08 95       	ret

00000390 <_exit>:
 390:	f8 94       	cli

00000392 <__stop_program>:
 392:	ff cf       	rjmp	.-2      	; 0x392 <__stop_program>
