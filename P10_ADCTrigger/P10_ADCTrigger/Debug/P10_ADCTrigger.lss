
P10_ADCTrigger.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000047a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000004ce  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000500  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000053c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000612  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000585  00000000  00000000  00000b7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000022a  00000000  00000000  00001103  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00001330  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000320  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fa  00000000  00000000  000016e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000017e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_14>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 75 00 	jmp	0xea	; 0xea <__vector_19>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 36       	cpi	r26, 0x60	; 96
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  74:	0c 94 3b 02 	jmp	0x476	; 0x476 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_14>:
#include <avr/interrupt.h>
#include <util/delay.h>

volatile int x = 0, y = 0; 

ISR (ADC_vect) {
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	3f 93       	push	r19
  8a:	4f 93       	push	r20
  8c:	5f 93       	push	r21
  8e:	6f 93       	push	r22
  90:	7f 93       	push	r23
  92:	8f 93       	push	r24
  94:	9f 93       	push	r25
  96:	af 93       	push	r26
  98:	bf 93       	push	r27
  9a:	ef 93       	push	r30
  9c:	ff 93       	push	r31
	OCR2 = (int)((double)ADC * 255.0 / 1023.0); 
  9e:	64 b1       	in	r22, 0x04	; 4
  a0:	75 b1       	in	r23, 0x05	; 5
  a2:	80 e0       	ldi	r24, 0x00	; 0
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	0e 94 40 01 	call	0x280	; 0x280 <__floatunsisf>
  aa:	20 e0       	ldi	r18, 0x00	; 0
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	4f e7       	ldi	r20, 0x7F	; 127
  b0:	53 e4       	ldi	r21, 0x43	; 67
  b2:	0e 94 ce 01 	call	0x39c	; 0x39c <__mulsf3>
  b6:	20 e0       	ldi	r18, 0x00	; 0
  b8:	30 ec       	ldi	r19, 0xC0	; 192
  ba:	4f e7       	ldi	r20, 0x7F	; 127
  bc:	54 e4       	ldi	r21, 0x44	; 68
  be:	0e 94 98 00 	call	0x130	; 0x130 <__divsf3>
  c2:	0e 94 0a 01 	call	0x214	; 0x214 <__fixsfsi>
  c6:	63 bd       	out	0x23, r22	; 35
}
  c8:	ff 91       	pop	r31
  ca:	ef 91       	pop	r30
  cc:	bf 91       	pop	r27
  ce:	af 91       	pop	r26
  d0:	9f 91       	pop	r25
  d2:	8f 91       	pop	r24
  d4:	7f 91       	pop	r23
  d6:	6f 91       	pop	r22
  d8:	5f 91       	pop	r21
  da:	4f 91       	pop	r20
  dc:	3f 91       	pop	r19
  de:	2f 91       	pop	r18
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	0f 90       	pop	r0
  e6:	1f 90       	pop	r1
  e8:	18 95       	reti

000000ea <__vector_19>:

ISR (TIMER0_COMP_vect) {}
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <main>:
	
int main(void)
{	
	// Habilitar interrupcion
	sei();
  fe:	78 94       	sei
		
    // Configurar ADC
	ADMUX = 0b01000010;
 100:	82 e4       	ldi	r24, 0x42	; 66
 102:	87 b9       	out	0x07, r24	; 7
	SFIOR = 0b01100000; // Tim0 comp
 104:	80 e6       	ldi	r24, 0x60	; 96
 106:	80 bf       	out	0x30, r24	; 48
	ADCSRA = 0b10111011; // Trigger, INT, 8
 108:	8b eb       	ldi	r24, 0xBB	; 187
 10a:	86 b9       	out	0x06, r24	; 6
	
	// Configurar timer 0
	OCR0 = 97; 
 10c:	81 e6       	ldi	r24, 0x61	; 97
 10e:	8c bf       	out	0x3c, r24	; 60
	TCCR0 = 0b00001101; // prescaler 1024
 110:	8d e0       	ldi	r24, 0x0D	; 13
 112:	83 bf       	out	0x33, r24	; 51
	TIMSK = 0b00000010;
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	89 bf       	out	0x39, r24	; 57
	
	// Configurar PWM en OCR2 prescaler 64
	TCCR2 |= (1<<WGM20)|(1<<WGM21);                   
 118:	85 b5       	in	r24, 0x25	; 37
 11a:	88 64       	ori	r24, 0x48	; 72
 11c:	85 bd       	out	0x25, r24	; 37
	TCCR2 |= (1<<COM21)|(1<<CS20)|(1<<CS21)|(0<<CS22);
 11e:	85 b5       	in	r24, 0x25	; 37
 120:	83 62       	ori	r24, 0x23	; 35
 122:	85 bd       	out	0x25, r24	; 37
	
	OCR2 = 63;
 124:	8f e3       	ldi	r24, 0x3F	; 63
 126:	83 bd       	out	0x23, r24	; 35
	
	// Puertos
	DDRD = 255;
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	81 bb       	out	0x11, r24	; 17
	DDRC = 255; 
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	ff cf       	rjmp	.-2      	; 0x12e <main+0x30>

00000130 <__divsf3>:
 130:	0e 94 ac 00 	call	0x158	; 0x158 <__divsf3x>
 134:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_round>
 138:	0e 94 8d 01 	call	0x31a	; 0x31a <__fp_pscB>
 13c:	58 f0       	brcs	.+22     	; 0x154 <__divsf3+0x24>
 13e:	0e 94 86 01 	call	0x30c	; 0x30c <__fp_pscA>
 142:	40 f0       	brcs	.+16     	; 0x154 <__divsf3+0x24>
 144:	29 f4       	brne	.+10     	; 0x150 <__divsf3+0x20>
 146:	5f 3f       	cpi	r21, 0xFF	; 255
 148:	29 f0       	breq	.+10     	; 0x154 <__divsf3+0x24>
 14a:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__fp_inf>
 14e:	51 11       	cpse	r21, r1
 150:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_szero>
 154:	0c 94 83 01 	jmp	0x306	; 0x306 <__fp_nan>

00000158 <__divsf3x>:
 158:	0e 94 a5 01 	call	0x34a	; 0x34a <__fp_split3>
 15c:	68 f3       	brcs	.-38     	; 0x138 <__divsf3+0x8>

0000015e <__divsf3_pse>:
 15e:	99 23       	and	r25, r25
 160:	b1 f3       	breq	.-20     	; 0x14e <__divsf3+0x1e>
 162:	55 23       	and	r21, r21
 164:	91 f3       	breq	.-28     	; 0x14a <__divsf3+0x1a>
 166:	95 1b       	sub	r25, r21
 168:	55 0b       	sbc	r21, r21
 16a:	bb 27       	eor	r27, r27
 16c:	aa 27       	eor	r26, r26
 16e:	62 17       	cp	r22, r18
 170:	73 07       	cpc	r23, r19
 172:	84 07       	cpc	r24, r20
 174:	38 f0       	brcs	.+14     	; 0x184 <__divsf3_pse+0x26>
 176:	9f 5f       	subi	r25, 0xFF	; 255
 178:	5f 4f       	sbci	r21, 0xFF	; 255
 17a:	22 0f       	add	r18, r18
 17c:	33 1f       	adc	r19, r19
 17e:	44 1f       	adc	r20, r20
 180:	aa 1f       	adc	r26, r26
 182:	a9 f3       	breq	.-22     	; 0x16e <__divsf3_pse+0x10>
 184:	35 d0       	rcall	.+106    	; 0x1f0 <__divsf3_pse+0x92>
 186:	0e 2e       	mov	r0, r30
 188:	3a f0       	brmi	.+14     	; 0x198 <__divsf3_pse+0x3a>
 18a:	e0 e8       	ldi	r30, 0x80	; 128
 18c:	32 d0       	rcall	.+100    	; 0x1f2 <__divsf3_pse+0x94>
 18e:	91 50       	subi	r25, 0x01	; 1
 190:	50 40       	sbci	r21, 0x00	; 0
 192:	e6 95       	lsr	r30
 194:	00 1c       	adc	r0, r0
 196:	ca f7       	brpl	.-14     	; 0x18a <__divsf3_pse+0x2c>
 198:	2b d0       	rcall	.+86     	; 0x1f0 <__divsf3_pse+0x92>
 19a:	fe 2f       	mov	r31, r30
 19c:	29 d0       	rcall	.+82     	; 0x1f0 <__divsf3_pse+0x92>
 19e:	66 0f       	add	r22, r22
 1a0:	77 1f       	adc	r23, r23
 1a2:	88 1f       	adc	r24, r24
 1a4:	bb 1f       	adc	r27, r27
 1a6:	26 17       	cp	r18, r22
 1a8:	37 07       	cpc	r19, r23
 1aa:	48 07       	cpc	r20, r24
 1ac:	ab 07       	cpc	r26, r27
 1ae:	b0 e8       	ldi	r27, 0x80	; 128
 1b0:	09 f0       	breq	.+2      	; 0x1b4 <__divsf3_pse+0x56>
 1b2:	bb 0b       	sbc	r27, r27
 1b4:	80 2d       	mov	r24, r0
 1b6:	bf 01       	movw	r22, r30
 1b8:	ff 27       	eor	r31, r31
 1ba:	93 58       	subi	r25, 0x83	; 131
 1bc:	5f 4f       	sbci	r21, 0xFF	; 255
 1be:	3a f0       	brmi	.+14     	; 0x1ce <__divsf3_pse+0x70>
 1c0:	9e 3f       	cpi	r25, 0xFE	; 254
 1c2:	51 05       	cpc	r21, r1
 1c4:	78 f0       	brcs	.+30     	; 0x1e4 <__divsf3_pse+0x86>
 1c6:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__fp_inf>
 1ca:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_szero>
 1ce:	5f 3f       	cpi	r21, 0xFF	; 255
 1d0:	e4 f3       	brlt	.-8      	; 0x1ca <__divsf3_pse+0x6c>
 1d2:	98 3e       	cpi	r25, 0xE8	; 232
 1d4:	d4 f3       	brlt	.-12     	; 0x1ca <__divsf3_pse+0x6c>
 1d6:	86 95       	lsr	r24
 1d8:	77 95       	ror	r23
 1da:	67 95       	ror	r22
 1dc:	b7 95       	ror	r27
 1de:	f7 95       	ror	r31
 1e0:	9f 5f       	subi	r25, 0xFF	; 255
 1e2:	c9 f7       	brne	.-14     	; 0x1d6 <__divsf3_pse+0x78>
 1e4:	88 0f       	add	r24, r24
 1e6:	91 1d       	adc	r25, r1
 1e8:	96 95       	lsr	r25
 1ea:	87 95       	ror	r24
 1ec:	97 f9       	bld	r25, 7
 1ee:	08 95       	ret
 1f0:	e1 e0       	ldi	r30, 0x01	; 1
 1f2:	66 0f       	add	r22, r22
 1f4:	77 1f       	adc	r23, r23
 1f6:	88 1f       	adc	r24, r24
 1f8:	bb 1f       	adc	r27, r27
 1fa:	62 17       	cp	r22, r18
 1fc:	73 07       	cpc	r23, r19
 1fe:	84 07       	cpc	r24, r20
 200:	ba 07       	cpc	r27, r26
 202:	20 f0       	brcs	.+8      	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 204:	62 1b       	sub	r22, r18
 206:	73 0b       	sbc	r23, r19
 208:	84 0b       	sbc	r24, r20
 20a:	ba 0b       	sbc	r27, r26
 20c:	ee 1f       	adc	r30, r30
 20e:	88 f7       	brcc	.-30     	; 0x1f2 <__divsf3_pse+0x94>
 210:	e0 95       	com	r30
 212:	08 95       	ret

00000214 <__fixsfsi>:
 214:	0e 94 11 01 	call	0x222	; 0x222 <__fixunssfsi>
 218:	68 94       	set
 21a:	b1 11       	cpse	r27, r1
 21c:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_szero>
 220:	08 95       	ret

00000222 <__fixunssfsi>:
 222:	0e 94 ad 01 	call	0x35a	; 0x35a <__fp_splitA>
 226:	88 f0       	brcs	.+34     	; 0x24a <__fixunssfsi+0x28>
 228:	9f 57       	subi	r25, 0x7F	; 127
 22a:	98 f0       	brcs	.+38     	; 0x252 <__fixunssfsi+0x30>
 22c:	b9 2f       	mov	r27, r25
 22e:	99 27       	eor	r25, r25
 230:	b7 51       	subi	r27, 0x17	; 23
 232:	b0 f0       	brcs	.+44     	; 0x260 <__fixunssfsi+0x3e>
 234:	e1 f0       	breq	.+56     	; 0x26e <__fixunssfsi+0x4c>
 236:	66 0f       	add	r22, r22
 238:	77 1f       	adc	r23, r23
 23a:	88 1f       	adc	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	1a f0       	brmi	.+6      	; 0x246 <__fixunssfsi+0x24>
 240:	ba 95       	dec	r27
 242:	c9 f7       	brne	.-14     	; 0x236 <__fixunssfsi+0x14>
 244:	14 c0       	rjmp	.+40     	; 0x26e <__fixunssfsi+0x4c>
 246:	b1 30       	cpi	r27, 0x01	; 1
 248:	91 f0       	breq	.+36     	; 0x26e <__fixunssfsi+0x4c>
 24a:	0e 94 c7 01 	call	0x38e	; 0x38e <__fp_zero>
 24e:	b1 e0       	ldi	r27, 0x01	; 1
 250:	08 95       	ret
 252:	0c 94 c7 01 	jmp	0x38e	; 0x38e <__fp_zero>
 256:	67 2f       	mov	r22, r23
 258:	78 2f       	mov	r23, r24
 25a:	88 27       	eor	r24, r24
 25c:	b8 5f       	subi	r27, 0xF8	; 248
 25e:	39 f0       	breq	.+14     	; 0x26e <__fixunssfsi+0x4c>
 260:	b9 3f       	cpi	r27, 0xF9	; 249
 262:	cc f3       	brlt	.-14     	; 0x256 <__fixunssfsi+0x34>
 264:	86 95       	lsr	r24
 266:	77 95       	ror	r23
 268:	67 95       	ror	r22
 26a:	b3 95       	inc	r27
 26c:	d9 f7       	brne	.-10     	; 0x264 <__fixunssfsi+0x42>
 26e:	3e f4       	brtc	.+14     	; 0x27e <__fixunssfsi+0x5c>
 270:	90 95       	com	r25
 272:	80 95       	com	r24
 274:	70 95       	com	r23
 276:	61 95       	neg	r22
 278:	7f 4f       	sbci	r23, 0xFF	; 255
 27a:	8f 4f       	sbci	r24, 0xFF	; 255
 27c:	9f 4f       	sbci	r25, 0xFF	; 255
 27e:	08 95       	ret

00000280 <__floatunsisf>:
 280:	e8 94       	clt
 282:	09 c0       	rjmp	.+18     	; 0x296 <__floatsisf+0x12>

00000284 <__floatsisf>:
 284:	97 fb       	bst	r25, 7
 286:	3e f4       	brtc	.+14     	; 0x296 <__floatsisf+0x12>
 288:	90 95       	com	r25
 28a:	80 95       	com	r24
 28c:	70 95       	com	r23
 28e:	61 95       	neg	r22
 290:	7f 4f       	sbci	r23, 0xFF	; 255
 292:	8f 4f       	sbci	r24, 0xFF	; 255
 294:	9f 4f       	sbci	r25, 0xFF	; 255
 296:	99 23       	and	r25, r25
 298:	a9 f0       	breq	.+42     	; 0x2c4 <__floatsisf+0x40>
 29a:	f9 2f       	mov	r31, r25
 29c:	96 e9       	ldi	r25, 0x96	; 150
 29e:	bb 27       	eor	r27, r27
 2a0:	93 95       	inc	r25
 2a2:	f6 95       	lsr	r31
 2a4:	87 95       	ror	r24
 2a6:	77 95       	ror	r23
 2a8:	67 95       	ror	r22
 2aa:	b7 95       	ror	r27
 2ac:	f1 11       	cpse	r31, r1
 2ae:	f8 cf       	rjmp	.-16     	; 0x2a0 <__floatsisf+0x1c>
 2b0:	fa f4       	brpl	.+62     	; 0x2f0 <__floatsisf+0x6c>
 2b2:	bb 0f       	add	r27, r27
 2b4:	11 f4       	brne	.+4      	; 0x2ba <__floatsisf+0x36>
 2b6:	60 ff       	sbrs	r22, 0
 2b8:	1b c0       	rjmp	.+54     	; 0x2f0 <__floatsisf+0x6c>
 2ba:	6f 5f       	subi	r22, 0xFF	; 255
 2bc:	7f 4f       	sbci	r23, 0xFF	; 255
 2be:	8f 4f       	sbci	r24, 0xFF	; 255
 2c0:	9f 4f       	sbci	r25, 0xFF	; 255
 2c2:	16 c0       	rjmp	.+44     	; 0x2f0 <__floatsisf+0x6c>
 2c4:	88 23       	and	r24, r24
 2c6:	11 f0       	breq	.+4      	; 0x2cc <__floatsisf+0x48>
 2c8:	96 e9       	ldi	r25, 0x96	; 150
 2ca:	11 c0       	rjmp	.+34     	; 0x2ee <__floatsisf+0x6a>
 2cc:	77 23       	and	r23, r23
 2ce:	21 f0       	breq	.+8      	; 0x2d8 <__floatsisf+0x54>
 2d0:	9e e8       	ldi	r25, 0x8E	; 142
 2d2:	87 2f       	mov	r24, r23
 2d4:	76 2f       	mov	r23, r22
 2d6:	05 c0       	rjmp	.+10     	; 0x2e2 <__floatsisf+0x5e>
 2d8:	66 23       	and	r22, r22
 2da:	71 f0       	breq	.+28     	; 0x2f8 <__floatsisf+0x74>
 2dc:	96 e8       	ldi	r25, 0x86	; 134
 2de:	86 2f       	mov	r24, r22
 2e0:	70 e0       	ldi	r23, 0x00	; 0
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	2a f0       	brmi	.+10     	; 0x2f0 <__floatsisf+0x6c>
 2e6:	9a 95       	dec	r25
 2e8:	66 0f       	add	r22, r22
 2ea:	77 1f       	adc	r23, r23
 2ec:	88 1f       	adc	r24, r24
 2ee:	da f7       	brpl	.-10     	; 0x2e6 <__floatsisf+0x62>
 2f0:	88 0f       	add	r24, r24
 2f2:	96 95       	lsr	r25
 2f4:	87 95       	ror	r24
 2f6:	97 f9       	bld	r25, 7
 2f8:	08 95       	ret

000002fa <__fp_inf>:
 2fa:	97 f9       	bld	r25, 7
 2fc:	9f 67       	ori	r25, 0x7F	; 127
 2fe:	80 e8       	ldi	r24, 0x80	; 128
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	08 95       	ret

00000306 <__fp_nan>:
 306:	9f ef       	ldi	r25, 0xFF	; 255
 308:	80 ec       	ldi	r24, 0xC0	; 192
 30a:	08 95       	ret

0000030c <__fp_pscA>:
 30c:	00 24       	eor	r0, r0
 30e:	0a 94       	dec	r0
 310:	16 16       	cp	r1, r22
 312:	17 06       	cpc	r1, r23
 314:	18 06       	cpc	r1, r24
 316:	09 06       	cpc	r0, r25
 318:	08 95       	ret

0000031a <__fp_pscB>:
 31a:	00 24       	eor	r0, r0
 31c:	0a 94       	dec	r0
 31e:	12 16       	cp	r1, r18
 320:	13 06       	cpc	r1, r19
 322:	14 06       	cpc	r1, r20
 324:	05 06       	cpc	r0, r21
 326:	08 95       	ret

00000328 <__fp_round>:
 328:	09 2e       	mov	r0, r25
 32a:	03 94       	inc	r0
 32c:	00 0c       	add	r0, r0
 32e:	11 f4       	brne	.+4      	; 0x334 <__fp_round+0xc>
 330:	88 23       	and	r24, r24
 332:	52 f0       	brmi	.+20     	; 0x348 <__fp_round+0x20>
 334:	bb 0f       	add	r27, r27
 336:	40 f4       	brcc	.+16     	; 0x348 <__fp_round+0x20>
 338:	bf 2b       	or	r27, r31
 33a:	11 f4       	brne	.+4      	; 0x340 <__fp_round+0x18>
 33c:	60 ff       	sbrs	r22, 0
 33e:	04 c0       	rjmp	.+8      	; 0x348 <__fp_round+0x20>
 340:	6f 5f       	subi	r22, 0xFF	; 255
 342:	7f 4f       	sbci	r23, 0xFF	; 255
 344:	8f 4f       	sbci	r24, 0xFF	; 255
 346:	9f 4f       	sbci	r25, 0xFF	; 255
 348:	08 95       	ret

0000034a <__fp_split3>:
 34a:	57 fd       	sbrc	r21, 7
 34c:	90 58       	subi	r25, 0x80	; 128
 34e:	44 0f       	add	r20, r20
 350:	55 1f       	adc	r21, r21
 352:	59 f0       	breq	.+22     	; 0x36a <__fp_splitA+0x10>
 354:	5f 3f       	cpi	r21, 0xFF	; 255
 356:	71 f0       	breq	.+28     	; 0x374 <__fp_splitA+0x1a>
 358:	47 95       	ror	r20

0000035a <__fp_splitA>:
 35a:	88 0f       	add	r24, r24
 35c:	97 fb       	bst	r25, 7
 35e:	99 1f       	adc	r25, r25
 360:	61 f0       	breq	.+24     	; 0x37a <__fp_splitA+0x20>
 362:	9f 3f       	cpi	r25, 0xFF	; 255
 364:	79 f0       	breq	.+30     	; 0x384 <__fp_splitA+0x2a>
 366:	87 95       	ror	r24
 368:	08 95       	ret
 36a:	12 16       	cp	r1, r18
 36c:	13 06       	cpc	r1, r19
 36e:	14 06       	cpc	r1, r20
 370:	55 1f       	adc	r21, r21
 372:	f2 cf       	rjmp	.-28     	; 0x358 <__fp_split3+0xe>
 374:	46 95       	lsr	r20
 376:	f1 df       	rcall	.-30     	; 0x35a <__fp_splitA>
 378:	08 c0       	rjmp	.+16     	; 0x38a <__fp_splitA+0x30>
 37a:	16 16       	cp	r1, r22
 37c:	17 06       	cpc	r1, r23
 37e:	18 06       	cpc	r1, r24
 380:	99 1f       	adc	r25, r25
 382:	f1 cf       	rjmp	.-30     	; 0x366 <__fp_splitA+0xc>
 384:	86 95       	lsr	r24
 386:	71 05       	cpc	r23, r1
 388:	61 05       	cpc	r22, r1
 38a:	08 94       	sec
 38c:	08 95       	ret

0000038e <__fp_zero>:
 38e:	e8 94       	clt

00000390 <__fp_szero>:
 390:	bb 27       	eor	r27, r27
 392:	66 27       	eor	r22, r22
 394:	77 27       	eor	r23, r23
 396:	cb 01       	movw	r24, r22
 398:	97 f9       	bld	r25, 7
 39a:	08 95       	ret

0000039c <__mulsf3>:
 39c:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__mulsf3x>
 3a0:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_round>
 3a4:	0e 94 86 01 	call	0x30c	; 0x30c <__fp_pscA>
 3a8:	38 f0       	brcs	.+14     	; 0x3b8 <__mulsf3+0x1c>
 3aa:	0e 94 8d 01 	call	0x31a	; 0x31a <__fp_pscB>
 3ae:	20 f0       	brcs	.+8      	; 0x3b8 <__mulsf3+0x1c>
 3b0:	95 23       	and	r25, r21
 3b2:	11 f0       	breq	.+4      	; 0x3b8 <__mulsf3+0x1c>
 3b4:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__fp_inf>
 3b8:	0c 94 83 01 	jmp	0x306	; 0x306 <__fp_nan>
 3bc:	11 24       	eor	r1, r1
 3be:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_szero>

000003c2 <__mulsf3x>:
 3c2:	0e 94 a5 01 	call	0x34a	; 0x34a <__fp_split3>
 3c6:	70 f3       	brcs	.-36     	; 0x3a4 <__mulsf3+0x8>

000003c8 <__mulsf3_pse>:
 3c8:	95 9f       	mul	r25, r21
 3ca:	c1 f3       	breq	.-16     	; 0x3bc <__mulsf3+0x20>
 3cc:	95 0f       	add	r25, r21
 3ce:	50 e0       	ldi	r21, 0x00	; 0
 3d0:	55 1f       	adc	r21, r21
 3d2:	62 9f       	mul	r22, r18
 3d4:	f0 01       	movw	r30, r0
 3d6:	72 9f       	mul	r23, r18
 3d8:	bb 27       	eor	r27, r27
 3da:	f0 0d       	add	r31, r0
 3dc:	b1 1d       	adc	r27, r1
 3de:	63 9f       	mul	r22, r19
 3e0:	aa 27       	eor	r26, r26
 3e2:	f0 0d       	add	r31, r0
 3e4:	b1 1d       	adc	r27, r1
 3e6:	aa 1f       	adc	r26, r26
 3e8:	64 9f       	mul	r22, r20
 3ea:	66 27       	eor	r22, r22
 3ec:	b0 0d       	add	r27, r0
 3ee:	a1 1d       	adc	r26, r1
 3f0:	66 1f       	adc	r22, r22
 3f2:	82 9f       	mul	r24, r18
 3f4:	22 27       	eor	r18, r18
 3f6:	b0 0d       	add	r27, r0
 3f8:	a1 1d       	adc	r26, r1
 3fa:	62 1f       	adc	r22, r18
 3fc:	73 9f       	mul	r23, r19
 3fe:	b0 0d       	add	r27, r0
 400:	a1 1d       	adc	r26, r1
 402:	62 1f       	adc	r22, r18
 404:	83 9f       	mul	r24, r19
 406:	a0 0d       	add	r26, r0
 408:	61 1d       	adc	r22, r1
 40a:	22 1f       	adc	r18, r18
 40c:	74 9f       	mul	r23, r20
 40e:	33 27       	eor	r19, r19
 410:	a0 0d       	add	r26, r0
 412:	61 1d       	adc	r22, r1
 414:	23 1f       	adc	r18, r19
 416:	84 9f       	mul	r24, r20
 418:	60 0d       	add	r22, r0
 41a:	21 1d       	adc	r18, r1
 41c:	82 2f       	mov	r24, r18
 41e:	76 2f       	mov	r23, r22
 420:	6a 2f       	mov	r22, r26
 422:	11 24       	eor	r1, r1
 424:	9f 57       	subi	r25, 0x7F	; 127
 426:	50 40       	sbci	r21, 0x00	; 0
 428:	9a f0       	brmi	.+38     	; 0x450 <__DATA_REGION_LENGTH__+0x50>
 42a:	f1 f0       	breq	.+60     	; 0x468 <__stack+0x9>
 42c:	88 23       	and	r24, r24
 42e:	4a f0       	brmi	.+18     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 430:	ee 0f       	add	r30, r30
 432:	ff 1f       	adc	r31, r31
 434:	bb 1f       	adc	r27, r27
 436:	66 1f       	adc	r22, r22
 438:	77 1f       	adc	r23, r23
 43a:	88 1f       	adc	r24, r24
 43c:	91 50       	subi	r25, 0x01	; 1
 43e:	50 40       	sbci	r21, 0x00	; 0
 440:	a9 f7       	brne	.-22     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 442:	9e 3f       	cpi	r25, 0xFE	; 254
 444:	51 05       	cpc	r21, r1
 446:	80 f0       	brcs	.+32     	; 0x468 <__stack+0x9>
 448:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__fp_inf>
 44c:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_szero>
 450:	5f 3f       	cpi	r21, 0xFF	; 255
 452:	e4 f3       	brlt	.-8      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 454:	98 3e       	cpi	r25, 0xE8	; 232
 456:	d4 f3       	brlt	.-12     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 458:	86 95       	lsr	r24
 45a:	77 95       	ror	r23
 45c:	67 95       	ror	r22
 45e:	b7 95       	ror	r27
 460:	f7 95       	ror	r31
 462:	e7 95       	ror	r30
 464:	9f 5f       	subi	r25, 0xFF	; 255
 466:	c1 f7       	brne	.-16     	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 468:	fe 2b       	or	r31, r30
 46a:	88 0f       	add	r24, r24
 46c:	91 1d       	adc	r25, r1
 46e:	96 95       	lsr	r25
 470:	87 95       	ror	r24
 472:	97 f9       	bld	r25, 7
 474:	08 95       	ret

00000476 <_exit>:
 476:	f8 94       	cli

00000478 <__stop_program>:
 478:	ff cf       	rjmp	.-2      	; 0x478 <__stop_program>
